/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/sessions/": {
    /** Get Sessions */
    get: operations["get_sessions_sessions__get"];
    /** Insert Session */
    post: operations["insert_session_sessions__post"];
  };
  "/sessions/{id}": {
    /** Get Session */
    get: operations["get_session_sessions__id__get"];
    /** Delete Session */
    delete: operations["delete_session_sessions__id__delete"];
    /** Update Session */
    patch: operations["update_session_sessions__id__patch"];
  };
  "/sessions/run": {
    /** Run Crew */
    post: operations["run_crew_sessions_run_post"];
  };
  "/messages/": {
    /** Get Messages */
    get: operations["get_messages_messages__get"];
    /** Insert Message */
    post: operations["insert_message_messages__post"];
  };
  "/messages/{id}": {
    /** Get Message */
    get: operations["get_message_messages__id__get"];
    /** Delete Message */
    delete: operations["delete_message_messages__id__delete"];
    /** Update Message */
    patch: operations["update_message_messages__id__patch"];
  };
  "/crews/": {
    /** Get Crews */
    get: operations["get_crews_crews__get"];
    /** Insert Crew */
    post: operations["insert_crew_crews__post"];
  };
  "/crews/validate/{crew_id}": {
    /** Validate Crew */
    post: operations["validate_crew_crews_validate__crew_id__post"];
  };
  "/crews/{id}": {
    /** Get Crew By Id */
    get: operations["get_crew_by_id_crews__id__get"];
    /** Delete Crew */
    delete: operations["delete_crew_crews__id__delete"];
    /** Update Crew */
    patch: operations["update_crew_crews__id__patch"];
  };
  "/agents/": {
    /** Get Agents */
    get: operations["get_agents_agents__get"];
    /** Insert Agent */
    post: operations["insert_agent_agents__post"];
  };
  "/agents/{id}": {
    /** Get Agent By Id */
    get: operations["get_agent_by_id_agents__id__get"];
    /** Delete Agent */
    delete: operations["delete_agent_agents__id__delete"];
    /** Patch Agent */
    patch: operations["patch_agent_agents__id__patch"];
  };
  "/profiles/": {
    /** Get Profiles */
    get: operations["get_profiles_profiles__get"];
    /** Insert Profile */
    post: operations["insert_profile_profiles__post"];
  };
  "/profiles/{id}": {
    /** Get Profile By Id */
    get: operations["get_profile_by_id_profiles__id__get"];
    /** Delete Profile */
    delete: operations["delete_profile_profiles__id__delete"];
    /** Update Profile */
    patch: operations["update_profile_profiles__id__patch"];
  };
  "/api-keys/": {
    /**
     * Get Api Keys
     * @description Returns api keys with the api key type as an object with the id, name, description etc.
     */
    get: operations["get_api_keys_api_keys__get"];
    /** Insert Api Key */
    post: operations["insert_api_key_api_keys__post"];
  };
  "/api-keys/{id}": {
    /** Get Api Key */
    get: operations["get_api_key_api_keys__id__get"];
    /** Delete Api Key */
    delete: operations["delete_api_key_api_keys__id__delete"];
    /** Update Api Key */
    patch: operations["update_api_key_api_keys__id__patch"];
  };
  "/auth/sign_in/provider": {
    /** Provider Sign In */
    post: operations["provider_sign_in_auth_sign_in_provider_post"];
  };
  "/api-key-types/": {
    /** Get All Api Key Types */
    get: operations["get_all_api_key_types_api_key_types__get"];
  };
  "/tools/": {
    /** Get Tools */
    get: operations["get_tools_tools__get"];
    /** Insert Tool */
    post: operations["insert_tool_tools__post"];
  };
  "/tools/{id}": {
    /** Get Tool */
    get: operations["get_tool_tools__id__get"];
    /** Delete Tool */
    delete: operations["delete_tool_tools__id__delete"];
    /** Update Profile */
    patch: operations["update_profile_tools__id__patch"];
  };
  "/tools/{agent_id}": {
    /** Add Tool */
    patch: operations["add_tool_tools__agent_id__patch"];
  };
  "/subscriptions/": {
    /** Get Subscriptions */
    get: operations["get_subscriptions_subscriptions__get"];
    /** Insert Subscription */
    post: operations["insert_subscription_subscriptions__post"];
  };
  "/subscriptions/{id}": {
    /** Delete Subscription */
    delete: operations["delete_subscription_subscriptions__id__delete"];
    /** Update Subscription */
    patch: operations["update_subscription_subscriptions__id__patch"];
  };
  "/rest/": {
    /** Redirect To Docs */
    get: operations["redirect_to_docs_rest__get"];
  };
  "/rest/test": {
    /** Test */
    get: operations["test_rest_test_get"];
  };
  "/rest/stop/{worker_id}": {
    /** Stop Stream */
    post: operations["stop_stream_rest_stop__worker_id__post"];
  };
  "/rest/generate-comment": {
    /** Generate Comment */
    post: operations["generate_comment_rest_generate_comment_post"];
  };
  "/rest/mark-lead-as-irrelevant": {
    /** Mark Lead As Irrelevant */
    post: operations["mark_lead_as_irrelevant_rest_mark_lead_as_irrelevant_post"];
  };
  "/rest/publish-comment": {
    /** Publish Comment */
    post: operations["publish_comment_rest_publish_comment_post"];
  };
  "/tiers/{id}": {
    /** Get Tier */
    get: operations["get_tier_tiers__id__get"];
    /** Delete Tier */
    delete: operations["delete_tier_tiers__id__delete"];
    /** Update Tier */
    patch: operations["update_tier_tiers__id__patch"];
  };
  "/tiers/": {
    /** Insert Tier */
    post: operations["insert_tier_tiers__post"];
  };
  "/billing/{id}": {
    /** Get Billings */
    get: operations["get_billings_billing__id__get"];
    /** Delete Billing */
    delete: operations["delete_billing_billing__id__delete"];
    /** Update Billing */
    patch: operations["update_billing_billing__id__patch"];
  };
  "/billing/": {
    /** Insert Billing */
    post: operations["insert_billing_billing__post"];
  };
  "/": {
    /** Redirect To Docs */
    get: operations["redirect_to_docs__get"];
  };
  "/improve": {
    /** Improve */
    get: operations["improve_improve_get"];
  };
  "/auto-build": {
    /** Auto Build Crew */
    get: operations["auto_build_crew_auto_build_get"];
  };
  "/me": {
    /** Get Profile From Header */
    get: operations["get_profile_from_header_me_get"];
  };
  "/models": {
    /** Get Models */
    get: operations["get_models_models_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** APIKey */
    APIKey: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      api_key_type?: components["schemas"]["APIKeyType"] | null;
      /** Api Key */
      api_key: string;
    };
    /** APIKeyInsertRequest */
    APIKeyInsertRequest: {
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /**
       * Api Key Type Id
       * Format: uuid
       */
      api_key_type_id: string;
      /** Api Key */
      api_key: string;
    };
    /** APIKeyType */
    APIKeyType: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /** Name */
      name?: string | null;
      /** Description */
      description?: string | null;
    };
    /** APIKeyUpdateRequest */
    APIKeyUpdateRequest: {
      /** Api Key */
      api_key: string;
    };
    /** Agent */
    Agent: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /** Title */
      title: string;
      /** Published */
      published: boolean;
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /** Avatar */
      avatar: string;
      /** System Message */
      system_message: string;
      /**
       * Model
       * @enum {string}
       */
      model: "gpt-3.5-turbo" | "gpt-4-turbo";
      models: components["schemas"]["LLMModel"];
      /** Tools */
      tools: Record<string, never>[];
      /** Crew Ids */
      crew_ids: string[];
      /** Description */
      description: string;
      /** Role */
      role: string;
      /** Version */
      version: string;
    };
    /** AgentInsertRequest */
    AgentInsertRequest: {
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /** Avatar */
      avatar: string;
      /** Title */
      title: string;
      /** Role */
      role: string;
      /** System Message */
      system_message: string;
      /** Published */
      published: boolean;
      /**
       * Model
       * @enum {string}
       */
      model: "gpt-3.5-turbo" | "gpt-4-turbo";
      /** Tools */
      tools: Record<string, never>[];
      /** Crew Ids */
      crew_ids: string[];
      /** Description */
      description: string;
      /** Version */
      version: string;
    };
    /** AgentUpdateModel */
    AgentUpdateModel: {
      /** Profile Id */
      profile_id?: string | null;
      /** Avatar */
      avatar?: string | null;
      /** Title */
      title?: string | null;
      /** Role */
      role?: string | null;
      /** System Message */
      system_message?: string | null;
      /** Published */
      published?: boolean | null;
      /** Model */
      model?: ("gpt-3.5-turbo" | "gpt-4-turbo") | null;
      /** Tools */
      tools?: Record<string, never>[] | null;
      /** Crew Ids */
      crew_ids?: string[] | null;
      /** Description */
      description?: string | null;
      /** Version */
      version?: string | null;
    };
    /** Billing */
    Billing: {
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /** Stripe Payment Method */
      stripe_payment_method?: string | null;
      /** Description */
      description?: string | null;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
    };
    /** BillingInsertRequest */
    BillingInsertRequest: {
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /** Stripe Payment Method */
      stripe_payment_method?: string | null;
      /** Description */
      description?: string | null;
    };
    /** BillingUpdateRequest */
    BillingUpdateRequest: {
      /** Stripe Payment Method */
      stripe_payment_method?: string | null;
      /** Description */
      description?: string | null;
    };
    /** Crew */
    Crew: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /** Edges */
      edges: components["schemas"]["Edge"][];
      /** Published */
      published: boolean;
      /** Title */
      title: string;
      /** Description */
      description: string;
      /**
       * Updated At
       * Format: date-time
       */
      updated_at: string;
      /** Nodes */
      nodes: string[];
      /** Receiver Id */
      receiver_id?: string | null;
      /** Avatar */
      avatar?: string | null;
      prompt?: components["schemas"]["Prompt"] | null;
    };
    /** CrewInsertRequest */
    CrewInsertRequest: {
      /**
       * Receiver Id
       * Format: uuid
       */
      receiver_id: string;
      prompt: components["schemas"]["Prompt"];
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /** Edges */
      edges: components["schemas"]["Edge"][];
      /** Published */
      published: boolean;
      /** Title */
      title: string;
      /** Description */
      description: string;
      /** Nodes */
      nodes: string[];
    };
    /** CrewUpdateRequest */
    CrewUpdateRequest: {
      /** Receiver Id */
      receiver_id?: string | null;
      prompt?: components["schemas"]["Prompt"] | null;
      /** Profile Id */
      profile_id?: string | null;
      /** Edges */
      edges?: components["schemas"]["Edge"][] | null;
      /** Published */
      published?: boolean | null;
      /** Title */
      title?: string | null;
      /** Description */
      description?: string | null;
      /** Nodes */
      nodes?: string[] | null;
    };
    /** Edge */
    Edge: {
      /** Id */
      id: string;
      /** Type */
      type?: string | null;
      /** Source */
      source: string;
      /** Target */
      target: string;
      /** Sourcehandle */
      sourceHandle?: string | null;
      /** Targethandle */
      targetHandle?: string | null;
      /** Animated */
      animated?: boolean | null;
      /** Hidden */
      hidden?: boolean | null;
      /** Deletable */
      deletable?: boolean | null;
      /** Selectable */
      selectable?: boolean | null;
      /** Data */
      data?: unknown;
      /** Selected */
      selected?: boolean | null;
      /** Markerstart */
      markerStart?: string | components["schemas"]["Marker"] | null;
      /** Markerend */
      markerEnd?: string | components["schemas"]["Marker"] | null;
      /** Zindex */
      zIndex?: number | null;
      /** Arialabel */
      ariaLabel?: string | null;
      /** Interactionwidth */
      interactionWidth?: number | null;
      /** Label */
      label?: string | null;
      /** Labelstyle */
      labelStyle?: string | null;
      /** Style */
      style?: string | null;
      /** Class */
      class?: string | null;
      pathOptions?: components["schemas"]["PathOptions"] | null;
    };
    /** FalseLead */
    FalseLead: {
      /**
       * Lead Id
       * Format: uuid
       */
      lead_id: string;
      /**
       * Submission Id
       * Format: uuid
       */
      submission_id: string;
      /** Correct Reason */
      correct_reason: string;
    };
    /** GenerateCommentRequest */
    GenerateCommentRequest: {
      /** Title */
      title: string;
      /** Selftext */
      selftext: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** LLMModel */
    LLMModel: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** Marker */
    Marker: {
      /** Type */
      type: string;
      /** Color */
      color?: string | null;
      /** Width */
      width?: number | null;
      /** Height */
      height?: number | null;
      /** Markerunits */
      markerUnits?: string | null;
      /** Orient */
      orient?: string | null;
      /** Strokewidth */
      strokeWidth?: number | null;
    };
    /** Message */
    Message: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Session Id
       * Format: uuid
       */
      session_id: string;
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /** Sender Id */
      sender_id?: string | null;
      /** Recipient Id */
      recipient_id?: string | null;
      /** Content */
      content: string;
      /** Role */
      role: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
    };
    /** MessageInsertRequest */
    MessageInsertRequest: {
      /**
       * Session Id
       * Format: uuid
       */
      session_id: string;
      /** Content */
      content: string;
      /**
       * Role
       * @default user
       */
      role?: string;
      /** Recipient Id */
      recipient_id?: string | null;
      /** Sender Id */
      sender_id?: string | null;
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
    };
    /** MessageUpdateRequest */
    MessageUpdateRequest: {
      /** Session Id */
      session_id?: string | null;
      /** Content */
      content?: string | null;
      /** Role */
      role?: string | null;
      /** Recipient Id */
      recipient_id?: string | null;
      /** Sender Id */
      sender_id?: string | null;
      /** Profile Id */
      profile_id?: string | null;
    };
    /** OAuthResponse */
    OAuthResponse: {
      /**
       * Provider
       * @enum {string}
       */
      provider: "apple" | "azure" | "bitbucket" | "discord" | "facebook" | "figma" | "github" | "gitlab" | "google" | "kakao" | "keycloak" | "linkedin" | "notion" | "slack" | "spotify" | "twitch" | "twitter" | "workos" | "zoom";
      /** Url */
      url: string;
    };
    /** PathOptions */
    PathOptions: {
      /** Offset */
      offset?: number | null;
      /** Borderradius */
      borderRadius?: number | null;
      /** Curvature */
      curvature?: number | null;
    };
    /** Profile */
    Profile: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Tier Id
       * Format: uuid
       */
      tier_id: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /** Display Name */
      display_name: string;
      /** Stripe Customer Id */
      stripe_customer_id: string | null;
    };
    /** ProfileInsertRequest */
    ProfileInsertRequest: {
      /**
       * User Id
       * Format: uuid
       */
      user_id: string;
      /**
       * Tier Id
       * Format: uuid
       */
      tier_id: string;
      /** Display Name */
      display_name: string;
      /** Stripe Customer Id */
      stripe_customer_id?: string | null;
    };
    /** ProfileUpdateRequest */
    ProfileUpdateRequest: {
      /** Tier Id */
      tier_id?: string | null;
      /** Display Name */
      display_name?: string | null;
      /** Stripe Customer Id */
      stripe_customer_id?: string | null;
    };
    /** Prompt */
    Prompt: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Title */
      title: string;
      /** Content */
      content: string;
    };
    /** PublishCommentRequest */
    PublishCommentRequest: {
      /**
       * Lead Id
       * Format: uuid
       */
      lead_id: string;
      /** Comment */
      comment: string;
      /** Reddit Username */
      reddit_username: string;
      /** Reddit Password */
      reddit_password: string;
    };
    /** Session */
    Session: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /** Reply */
      reply: string;
      /**
       * Crew Id
       * Format: uuid
       */
      crew_id: string;
      /** Title */
      title: string;
      /**
       * Last Opened At
       * Format: date-time
       */
      last_opened_at: string;
      status: components["schemas"]["SessionStatus"];
    };
    /** SessionInsertRequest */
    SessionInsertRequest: {
      /**
       * Crew Id
       * Format: uuid
       */
      crew_id: string;
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /** Title */
      title: string | null;
    };
    /** SessionRunRequest */
    SessionRunRequest: {
      /**
       * Crew Id
       * Format: uuid
       */
      crew_id: string;
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /**
       * Session Title
       * @default Untitled
       */
      session_title?: string;
      /** Session Id */
      session_id?: string | null;
      /** Reply */
      reply?: string | null;
    };
    /**
     * SessionStatus
     * @enum {string}
     */
    SessionStatus: "running" | "finished" | "idle";
    /** SessionUpdateRequest */
    SessionUpdateRequest: {
      /** Crew Id */
      crew_id?: string | null;
      /** Reply */
      reply?: string | null;
      /** Profile Id */
      profile_id?: string | null;
      /** Title */
      title?: string | null;
      status?: components["schemas"]["SessionStatus"] | null;
    };
    /** SignInWithOAuthCredentials */
    SignInWithOAuthCredentials: {
      /**
       * Provider
       * @enum {string}
       */
      provider: "apple" | "azure" | "bitbucket" | "discord" | "facebook" | "figma" | "github" | "gitlab" | "google" | "kakao" | "keycloak" | "linkedin" | "notion" | "slack" | "spotify" | "twitch" | "twitter" | "workos" | "zoom";
      options?: components["schemas"]["SignInWithOAuthCredentialsOptions"];
    };
    /** SignInWithOAuthCredentialsOptions */
    SignInWithOAuthCredentialsOptions: {
      /** Redirect To */
      redirect_to?: string;
      /** Scopes */
      scopes?: string;
      /** Query Params */
      query_params?: {
        [key: string]: string;
      };
    };
    /** Subscription */
    Subscription: {
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /** Stripe Subscription Id */
      stripe_subscription_id?: string | null;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
    };
    /** SubscriptionInsertRequest */
    SubscriptionInsertRequest: {
      /**
       * Profile Id
       * Format: uuid
       */
      profile_id: string;
      /** Stripe Subscription Id */
      stripe_subscription_id?: string | null;
    };
    /** SubscriptionUpdateRequest */
    SubscriptionUpdateRequest: {
      /** Stripe Subscription Id */
      stripe_subscription_id?: string | null;
    };
    /** Tier */
    Tier: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /** Period */
      period: number;
      /** Limit */
      limit: number;
      /** Stripe Price Id */
      stripe_price_id?: string | null;
      /** Name */
      name?: string | null;
      /** Description */
      description?: string | null;
      /** Slug */
      slug?: string | null;
      /** Image */
      image?: string | null;
    };
    /** TierInsertRequest */
    TierInsertRequest: {
      /** Period */
      period?: number | null;
      /** Limit */
      limit?: number | null;
      /** Stripe Price Id */
      stripe_price_id?: string | null;
      /** Name */
      name?: string | null;
      /** Description */
      description?: string | null;
      /** Slug */
      slug?: string | null;
      /** Image */
      image?: string | null;
    };
    /** TierUpdateRequest */
    TierUpdateRequest: {
      /** Period */
      period?: number | null;
      /** Limit */
      limit?: number | null;
      /** Stripe Price Id */
      stripe_price_id?: string | null;
      /** Name */
      name?: string | null;
      /** Description */
      description?: string | null;
      /** Slug */
      slug?: string | null;
      /** Image */
      image?: string | null;
    };
    /** Tool */
    Tool: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Api Key Type Id */
      api_key_type_id?: string | null;
    };
    /** ToolInsertRequest */
    ToolInsertRequest: {
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Api Key Type Id */
      api_key_type_id?: string | null;
    };
    /** ToolUpdateRequest */
    ToolUpdateRequest: {
      /** Name */
      name?: string | null;
      /** Description */
      description?: string | null;
      /** Api Key Type Id */
      api_key_type_id?: string | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Get Sessions */
  get_sessions_sessions__get: {
    parameters: {
      query?: {
        profile_id?: string | null;
        crew_id?: string | null;
        title?: string | null;
        status?: components["schemas"]["SessionStatus"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Session"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Insert Session */
  insert_session_sessions__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SessionInsertRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["Session"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Session */
  get_session_sessions__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Session"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Session */
  delete_session_sessions__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Session"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Session */
  update_session_sessions__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SessionUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Session"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Run Crew */
  run_crew_sessions_run_post: {
    parameters: {
      query?: {
        mock?: boolean;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SessionRunRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Session"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Messages */
  get_messages_messages__get: {
    parameters: {
      query?: {
        session_id?: string | null;
        profile_id?: string | null;
        recipient_id?: string | null;
        sender_id?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Message"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Insert Message */
  insert_message_messages__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["MessageInsertRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["Message"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Message */
  get_message_messages__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Message"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Message */
  delete_message_messages__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Message"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Message */
  update_message_messages__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MessageUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Message"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Crews */
  get_crews_crews__get: {
    parameters: {
      query?: {
        profile_id?: string | null;
        receiver_id?: string | null;
        title?: string | null;
        published?: boolean | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Crew"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Insert Crew */
  insert_crew_crews__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CrewInsertRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["Crew"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Validate Crew */
  validate_crew_crews_validate__crew_id__post: {
    parameters: {
      path: {
        crew_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Crew By Id */
  get_crew_by_id_crews__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Crew"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Crew */
  delete_crew_crews__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Crew"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Crew */
  update_crew_crews__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CrewUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Crew"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Agents */
  get_agents_agents__get: {
    parameters: {
      query?: {
        profile_id?: string | null;
        crew_id?: string | null;
        published?: boolean | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Agent"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Insert Agent */
  insert_agent_agents__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgentInsertRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["Agent"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Agent By Id */
  get_agent_by_id_agents__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Agent"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Agent */
  delete_agent_agents__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Agent"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch Agent */
  patch_agent_agents__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgentUpdateModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Agent"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Profiles */
  get_profiles_profiles__get: {
    parameters: {
      query?: {
        tier_id?: string | null;
        display_name?: string | null;
        stripe_customer_id?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Profile"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Insert Profile */
  insert_profile_profiles__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProfileInsertRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["Profile"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Profile By Id */
  get_profile_by_id_profiles__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Profile"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Profile */
  delete_profile_profiles__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Profile"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Profile */
  update_profile_profiles__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProfileUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Profile"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Api Keys
   * @description Returns api keys with the api key type as an object with the id, name, description etc.
   */
  get_api_keys_api_keys__get: {
    parameters: {
      query?: {
        profile_id?: string | null;
        api_key_type_id?: string | null;
        api_key?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["APIKey"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Insert Api Key */
  insert_api_key_api_keys__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["APIKeyInsertRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["APIKey"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Api Key */
  get_api_key_api_keys__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["APIKey"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Api Key */
  delete_api_key_api_keys__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["APIKey"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Api Key */
  update_api_key_api_keys__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["APIKeyUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["APIKey"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Provider Sign In */
  provider_sign_in_auth_sign_in_provider_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SignInWithOAuthCredentials"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OAuthResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get All Api Key Types */
  get_all_api_key_types_api_key_types__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["APIKeyType"][];
        };
      };
    };
  };
  /** Get Tools */
  get_tools_tools__get: {
    parameters: {
      query?: {
        name?: string | null;
        api_key_type_id?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Tool"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Insert Tool */
  insert_tool_tools__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ToolInsertRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["Tool"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Tool */
  get_tool_tools__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Tool"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Tool */
  delete_tool_tools__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Tool"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Profile */
  update_profile_tools__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ToolUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Tool"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Tool */
  add_tool_tools__agent_id__patch: {
    parameters: {
      query: {
        tool_id: string;
      };
      path: {
        agent_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Agent"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Subscriptions */
  get_subscriptions_subscriptions__get: {
    parameters: {
      query?: {
        profile_id?: string | null;
        stripe_subscription_id?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Subscription"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Insert Subscription */
  insert_subscription_subscriptions__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SubscriptionInsertRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["Subscription"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Subscription */
  delete_subscription_subscriptions__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Subscription"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Subscription */
  update_subscription_subscriptions__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SubscriptionUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Subscription"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Redirect To Docs */
  redirect_to_docs_rest__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Test */
  test_rest_test_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Stop Stream */
  stop_stream_rest_stop__worker_id__post: {
    parameters: {
      path: {
        worker_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Generate Comment */
  generate_comment_rest_generate_comment_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenerateCommentRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Mark Lead As Irrelevant */
  mark_lead_as_irrelevant_rest_mark_lead_as_irrelevant_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FalseLead"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Publish Comment */
  publish_comment_rest_publish_comment_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PublishCommentRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Tier */
  get_tier_tiers__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Tier"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Tier */
  delete_tier_tiers__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Tier"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Tier */
  update_tier_tiers__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TierUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Tier"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Insert Tier */
  insert_tier_tiers__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TierInsertRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Tier"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Billings */
  get_billings_billing__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Billing"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Billing */
  delete_billing_billing__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Billing"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Billing */
  update_billing_billing__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Billing"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Insert Billing */
  insert_billing_billing__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingInsertRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Billing"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Redirect To Docs */
  redirect_to_docs__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Improve */
  improve_improve_get: {
    parameters: {
      query: {
        word_limit: number;
        prompt: string;
        prompt_type: "generic" | "system" | "user";
        temperature: number;
        profile_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Auto Build Crew */
  auto_build_crew_auto_build_get: {
    parameters: {
      query: {
        general_task: string;
        profile_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Profile From Header */
  get_profile_from_header_me_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Profile"];
        };
      };
    };
  };
  /** Get Models */
  get_models_models_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LLMModel"][];
        };
      };
    };
  };
}
